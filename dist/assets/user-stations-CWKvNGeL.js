import{z as e}from"./index-DnZn71We.js";import{t as s}from"./index-DNJ-7_Rf.js";import{c as n,d as i}from"./format-time-Ca3E0HHB.js";const d=async o=>{if(!o)throw new Error("No userId was provided");try{const r=await fetch(`${s}/api/user-stations/${o}/with-latest-data`);if(!r.ok){const a=await r.json();throw(a==null?void 0:a.message)==="No se encontraron estaciones asignadas para este usuario"?new Error("Sin estaciones asignadas"):new Error("Network response was not ok")}const t=await r.json();return n.parse(t)}catch(r){throw r instanceof e.ZodError?(console.error("Ha ocurrido un error al validar los datos"),new Error(r.message)):new Error(r.message)}},f=async o=>{if(!o)throw new Error("No deviceId was provided");try{const r=await fetch(`${s}/api/weather-data/${o}/latest`);if(!r.ok)throw new Error("Network response was not ok");const t=await r.json();return i.parse(t)}catch(r){throw r instanceof e.ZodError?(console.error("Validation error:",r.errors),new Error(r.message)):new Error(r)}};export{f as a,d as g};
